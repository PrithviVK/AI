# -*- coding: utf-8 -*-
"""Programming Assignment 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fAimyTzbrz7WdRNKoP-goSOCSsG4nkh6
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

from google.colab import drive
drive.mount('/content/drive')

def get_col():
    df=pd.read_csv('/content/drive/My Drive/winequality-red.csv')
    df_select=df[['density','pH','alcohol']]
    # print(df_select)
    return df_select

df_select=get_col()

def norm_data(df_select):
  min=df_select.min()
  max=df_select.max()
  normalized_df= (df_select-min)/(max-min)
  # print(normalized_df)
  return normalized_df

normalized_df=norm_data(df_select)

def classify(normalized_df):
  # k=3
  # n_clusters=3
  Kmeans=KMeans(n_clusters=3)
  Kmeans.fit(normalized_df)
  # print(normalized_df)
  cluster_labels = Kmeans.labels_
  normalized_df['Cluster']=cluster_labels
  fig = plt.figure(figsize=(10,8))
  ax = fig.add_subplot(111, projection='3d')
  ax.scatter(normalized_df['density'], normalized_df['pH'], normalized_df['alcohol'],  c=cluster_labels, cmap='viridis')
  ax.set_xlabel('density')
  ax.set_ylabel('pH')
  ax.set_zlabel('alcohol')

  plt.title('K-Means Clustering with 3 clusters')
  plt.show()

  return normalized_df

normalized_df=classify(normalized_df)